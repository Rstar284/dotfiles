export EDITOR='nvim'
export ARCHFLAGS="-arch x86_64"
export PATH="/home/rstar284/.local/share/gem/ruby/3.0.0/bin:/home/rstar284/.deta/bin:$PATH"
export GCM_CREDENTIAL_STORE=cache
export FZF_DEFAULT_OPTS='
    --exact
    --reverse
    --border=rounded
    --cycle
    --height=50%
    --info=hidden
    --prompt=❯\
    --pointer=➜
    --color fg:7,bg:0,hl:1,fg+:232,bg+:1,hl+:255
    --color info:7,prompt:2,spinner:1,pointer:232,marker:1
    --color=prompt:2
    --color=pointer:4
    --color=gutter:-1
    --color=marker:11
    --color=spinner:6
    --color=border:8'
export _JAVA_AWT_WM_NONREPARENTING=1
export QT_QPA_PLATFORM=wayland
export MOZ_ENABLE_WAYLAND=1
export MOZ_WEBRENDER=1
export XDG_SESSION_TYPE=wayland
export XDG_CURRENT_DESKTOP=sway
export GTK_USE_PORTAL=0
export ZPLUGINDIR=${ZPLUGINDIR:-${ZDOTDIR:-$HOME/.config/zsh}/plugins}
export LS_COLORS="${LS_COLORS}:su=30;41:ow=30;42:st=30;44:"

alias cpf='wl-clip < '
alias lsl='ls -Al'
alias ls='ls -A'
alias wshowkeys='wshowkeys -b="#1c1b22" -a bottom -F="Hack Nerd Font Regular 20"'
alias plugins='ls $ZPLUGINDIR'

# Changing Directories
unsetopt auto_cd         # if I type a directory without 'cd', zsh automatically
                         # cds into it
setopt auto_pushd        # when I cd, push the old directory onto the dir stack
setopt pushd_ignore_dups # don't push duplicate copies of a directory to
                         # the directory stack

# Completion
setopt auto_list         # when tab completion is ambiguous, list choices
setopt auto_menu         # when tab completion is ambiguous, use menu completion
                         # (fill in the next option when you press tab)
setopt list_beep         # when tab completion is ambiguous, beep
unsetopt menu_complete   # when tab completion is ambiguous, zsh automatically
                         # fills in the first option
unsetopt list_ambiguous  # when there is an unambiguous prefix, insert that
                         # before inserting ambiguous stuff from the menu.
                         # menu_complete takes precedence over this.

# Expansion and Globbing
setopt glob              # expand stuff to generate filenames.
setopt extended_glob     # treat #, ~, and ^ as globbing patterns
setopt nomatch           # zsh gets mad when I glob patterns that don't exist

# History
setopt append_history    # append to the history file
setopt hist_ignore_dups  # don't add immediately repeated commands to history
setopt extended_history  # add timestamps to history.  For a rough idea of the
                         # extra disk space this uses, you'll use up an extra
                         # 15kB for running 1000 commands.  Your call.

# Init

# Input / Output
setopt aliases           # use aliases defined below
setopt correct           # correct my bad spelling of commands
unsetopt correct_all     # correct my bad spelling of all argument son a line
                         # This is unset because it is fairly common to have an
                         # argument that is similar to a file in the current
                         # directory (eg, sudo git would correct to .git)
# CUSTOMIZE(keyboard_layout)
setopt print_exit_value  # prints the exit value of commands when it's not 0
                         # (success); useful when writing shell scripts

# Job Control
setopt bg_nice           # nice background jobs (run them with lower priority)
setopt check_jobs        # yell at me if I try to exit zsh with jobs running
unsetopt notify          # notify me of background job status immediately

# The following lines were added by compinstall
zstyle ':completion:*' completer _expand _complete _ignored _match _correct _approximate _prefix
zstyle ':completion:*' completions 1
zstyle ':completion:*' glob 1
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list '+' '+m:{[:lower:]}={[:upper:]}' '+m:{[:lower:][:upper:]}={[:upper:][:lower:]}' '+r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' max-errors 3 numeric
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' substitute 1


# insert all expansions for expand completer
zstyle ':completion:*:expand:*' tag-order all-expansions

# formatting and messages
zstyle ':completion:*' verbose yes
zstyle ':completion:*' group-name ''
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'

# offer indexes before parameters in subscripts
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

zstyle '*' hosts $hosts
zstyle '*' users $users

# ignore completion functions (until the _ignored completer)
zstyle ':completion:*:functions' ignored-patterns '_*'

# don't load every tab-completion module at startup.  instead, mark them all
# as autoloaded so that when you need them, they'll get loaded.
autoload -Uz compinit
# allow tab completion for command line options
compinit
# End of lines added by compinstall

if [[ ! -d $ZPLUGINDIR/zsh_unplugged ]]; then
  git clone --quiet https://github.com/mattmc3/zsh_unplugged $ZPLUGINDIR/zsh_unplugged
fi
source $ZPLUGINDIR/zsh_unplugged/zsh_unplugged.plugin.zsh

repos=(
    romkatv/zsh-defer
    zsh-users/zsh-completions
    zsh-users/zsh-syntax-highlighting
    zsh-users/zsh-autosuggestions
    zsh-users/zsh-history-substring-search
)

plugin-load $repos

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

function plugin-update {
  ZPLUGINDIR=${ZPLUGINDIR:-$HOME/.config/zsh/plugins}
  for d in $ZPLUGINDIR/*/.git(/); do
    echo "Updating ${d:h:t}..."
    command git -C "${d:h}" pull --ff --recurse-submodules --depth 1 --rebase --autostash
  done
}

function plugin-compile {
  ZPLUGINDIR=${ZPLUGINDIR:-$HOME/.config/zsh/plugins}
  autoload -U zrecompile
  local f
  for f in $ZPLUGINDIR/**/*.zsh{,-theme}(N); do
    zrecompile -pq "$f"
  done
}

function short () {
    curl -X POST https://link.what-is.ml/api/new -H "Content-Type: application/json" -d "{\"url\": \"$1\"}" | wl-copy
}

if [ -z $DISPLAY ] && [ "$(tty)" = "/dev/tty1" ]; then
    eval $(gnome-keyring-daemon --start --components=gpg,pkcs11,secrets,ssh | sed 's/^\(.*\)/export \1/g')
    exec sway
fi

source ~/.nvm/nvm.sh
rfetch2
eval $(starship init zsh)
